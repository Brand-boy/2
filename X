# uncompyle6 version 3.7.4
# Python bytecode 2.7
# Decompiled from: Python 2.7.17 (default, Dec  5 2019, 10:47:43) 
# [GCC 4.2.1 Compatible Android (5220042 based on r346389c) Clang 8.0.7 (https://
# Embedded file name: <debby>
import re, random, time, bs4, os, sys, mechanize, cookielib, requests
os.system('clear')

def prRed(skk):
    print ('\x1b[91m {}\x1b[00m').format(skk)


def prGreen(skk):
    print ('\x1b[92m {}\x1b[00m').format(skk)


def prYellow(skk):
    print ('\x1b[93m {}\x1b[00m').format(skk)


def prLightPurple(skk):
    print ('\x1b[94m {}\x1b[00m').format(skk)


def prPurple(skk):
    print ('\x1b[95m {}\x1b[00m').format(skk)


def prCyan(skk):
    print ('\x1b[96m {}\x1b[00m').format(skk)


def prLightGray(skk):
    print ('\x1b[97m {}\x1b[00m').format(skk)


def prBlack(skk):
    print ('\x1b[98m {}\x1b[00m').format(skk)


green = '\x1b[32;1m'
gta = '@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@'
white = '\x1b[1;37m'
red = '\x1b[31m'
orange = '\x1b[33m'
blue = '\x1b[34m'
p = '\x1b[35m'
C = '\x1b[36m'
idgroup = []
savefile = 'ids.txt'
filee = 'ids.txt'

class Repot3:

    def __init__(self):
        self.br = mechanize.Browser()
        self.br.set_handle_equiv(True)
        self.br.set_handle_redirect(True)
        self.br.set_handle_referer(True)
        self.br.set_handle_robots(False)
        self.br.set_cookiejar(cookielib.LWPCookieJar())
        self.br.addheaders = [
         (
          'User-Agent',
          random.choice(open('useragents.txt').read().splitlines()))]
        time.sleep(1)
        print
        time.sleep(2)
        print green + '        [#] Login Facebook Account'
        print
        print
        self.url = 'https://m.facebook.com/login.php'
        self._email = raw_input(red + '[#]' + green + 'Enter Email:    ' + C + p + '')
        self._passwr = raw_input(red + '[#]' + green + 'Enter Password: ' + C + p + '')
        self.login()

    def login(self):
        self.br.open(self.url)
        self.br.select_form(nr=0)
        self.br.form['email'] = ('{}').format(self._email)
        self.br.form['pass'] = ('{}').format(self._passwr)
        self.br.submit()
        if 'save-device' in self.br.geturl():
            print
            print green + '[#] Login success \xe2\x88\x9a '
            print
            return self._cadow1()
        print
        print red + '[#] login Faild '
        time.sleep(1)
        exit()

    def _cadow1(self):
        print
        self._id = raw_input(red + '[#]' + green + 'Username Target:    ' + C + p + ' ')
        my = 'https://m.facebook.com/' + self._id
        url = my
        self.br.open(url)
        self.r = re.findall('<title>(.*?)</title>', self.br.response().read())
        if len(self.r) != 0:
            self._dray = raw_input(red + '[#]' + green + 'Type To Continue: :    ' + blue + green + self.r[0] + ' [y/yes]' + '')
            return self._lady()

    def _lady(self):
        if self._dray == 'yes':
            return self._indo()
        if self._dray == 'y':
            return self._indo()
        exit()

    def _indo(self):
        uoh = open(filee, 'r')
        self.uhoh = uoh.read()
        if self._id in self.uhoh:
            print
            print red + '.         Oops 405'
            print
            time.sleep(1)
            time.sleep(red + 'Error when entering ID')
            time.sleep(1)
            return self._cadow1()
        else:
            return self._cadow2()

    def _cadow2(self):
        _bs = self.br.response().read()
        bb = bs4.BeautifulSoup(_bs, features='html.parser')
        if len(bb) != 0:
            for x in bb.find_all('a', href=True):
                if 'rapid_report' in x['href']:
                    _cadow = x['href']
                    self.br.open(_cadow)
                    return self._cadow3()

    def _cadow3(self):
        try:
            self.br._factory.is_html = True
            self.br.select_form(nr=0)
            self.br.form['tag'] = ['profile_fake_account']
            self.br.submit()
            return self._cadow4()
        except Exception as f:
            print '    Bad404'

    def _cadow4(self):
        try:
            self.br._factory.is_html = True
            self.br.select_form(nr=0)
            self.br.form['action_key'] = ['FRX_PROFILE_REPORT_CONFIRMATION']
            self.br.submit()
            return self._cadow5()
        except Exception as f:
            print '    Bad405'

    def _cadow5(self):
        try:
            self.br._factory.is_html = True
            self.br.select_form(nr=0)
            self.br.form['checked'] = ['yes']
            self.br.submit()
            jj = open(filee, 'w')
            jj.write(self._id)
            print
            time.sleep(2)
            print C + green + '[#] Reported Success.xe2\x88\x9a '
            time.sleep(1)
            exit()
        except Exception as f:
            print '    Bad406'
